module: weather-responsive
name: "Weather Responsive Dashboard"
version: "1.0"
description: "Adjusts dashboard mood based on weather conditions"
template: |
  type: custom:bubble-card
  card_type: custom
  card:
    type: custom:hui-element
    card_type: entities
    show_header_toggle: false
    state_color: true
    entities:
      - entity: weather.home_2
        name: "Current Weather"
  styles_javascript: |
    `
    // Global weather effects - applies to entire dashboard
    function applyWeatherEffects() {
      const weather = hass.states['weather.home_2'].state;
      const isNight = hass.states['sun.sun'].state === 'below_horizon';
      
      // Remove any existing weather classes
      document.body.classList.remove(
        'weather-rainy', 'weather-cloudy', 
        'weather-sunny', 'weather-snowy'
      );
      
      // Apply weather-specific effects
      if (['rainy', 'pouring', 'lightning', 'lightning-rainy'].includes(weather)) {
        document.body.classList.add('weather-rainy');
        
        // Add rain overlay if it doesn't exist
        if (!document.getElementById('rain-overlay') && isNight) {
          const overlay = document.createElement('div');
          overlay.id = 'rain-overlay';
          overlay.style.cssText = \`
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            pointer-events: none;
            background: linear-gradient(to bottom, 
              rgba(100, 100, 120, 0.1), 
              rgba(80, 80, 100, 0.05)
            );
            z-index: 999;
            opacity: 0;
            transition: opacity 2s ease;
          \`;
          document.body.appendChild(overlay);
          
          // Fade in
          setTimeout(() => {
            overlay.style.opacity = '1';
          }, 100);
        }
      } else {
        // Remove rain overlay if it exists
        const overlay = document.getElementById('rain-overlay');
        if (overlay) {
          overlay.style.opacity = '0';
          setTimeout(() => {
            overlay.remove();
          }, 2000);
        }
      }
      
      // Apply time-based effects
      if (isNight) {
        document.body.classList.add('time-night');
      } else {
        document.body.classList.remove('time-night');
      }
    }
    
    // Add global stylesheet if not exists
    if (!document.getElementById('weather-responsive-style')) {
      const style = document.createElement('style');
      style.id = 'weather-responsive-style';
      style.textContent = \`
        body.weather-rainy {
          --primary-background-color: rgba(100, 120, 150, 0.05);
        }
        body.time-night {
          --card-background-color: rgba(40, 45, 60, 0.8);
          --primary-text-color: rgba(255, 255, 255, 0.9);
        }
        .weather-fade-in {
          animation: fadeIn 2s ease;
        }
        @keyframes fadeIn {
          from { opacity: 0; }
          to { opacity: 1; }
        }
      \`;
      document.head.appendChild(style);
    }
    
    // Apply weather effects
    applyWeatherEffects();
    
    // Hide this card
    ha-card {
      display: none;
    }
    \`