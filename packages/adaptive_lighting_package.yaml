# Home Assistant Package for Adaptive Lighting Configuration

# Light Groups for Adaptive Lighting
light:
  - platform: group
    name: AL Group Non-Hue
    unique_id: al_group_non_hue
    entities:
      - light.kitchen_main_lights
      - light.living_room_hallway_lights
  - platform: group
    name: AL Group Track Lights
    unique_id: al_group_track_lights
    entities:
      - light.dining_room_spot_lights
      - light.living_room_spot_lights
  - platform: group
    name: AL Group Hue Adapt
    unique_id: al_group_hue_adapt
    entities:
      - light.couch_lamp
      - light.entry_lamp
      - light.credenza_light
      - light.living_room_floor_lamp
      - light.office_lamp


# Include Adaptive Lighting Integration Configuration
adaptive_lighting:
  # Non-Hue configuration
  - name: "Non-Hue"
    lights: light.al_group_non_hue
    interval: 5.0
    transition: 1.0
    initial_transition: 1.0

  # Kitchen Island configuration
  - name: "Kitchen Island"
    lights:
      - light.kitchen_island_pendants
    interval: 5.0
    transition: 1.0
    initial_transition: 1.0
   

  # Master-Adapt configuration
  - name: "Master-Adapt"
    lights:
      - light.master_bedroom_table_lamps
    interval: 5.0
    transition: 1.0
    initial_transition: 1.0
  

  # Track Lights configuration
  - name: "Track Lights"
    lights: light.al_group_track_lights
    interval: 5.0
    transition: 1.0


  # Hue-Adapt configuration
  - name: "Hue-Adapt"
    lights: light.al_group_hue_adapt
    interval: 5.0
    transition: 3.0
    initial_transition: 1.0
  
# Scripts related to Adaptive Lighting
script:
  # --- Adaptive Lighting Manual Control (Parameterized) ---
  turn_on_manual_control_for_group:
    alias: Turn On Manual Control for AL Group
    description: Sets manual control for a specific Adaptive Lighting switch.
    fields:
      al_switch_entity_id:
        description: The entity ID of the Adaptive Lighting switch (e.g., switch.adaptive_lighting_hue_adapt).
        example: switch.adaptive_lighting_hue_adapt
    sequence:
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: "{{ al_switch_entity_id }}"
          manual_control: true
    mode: single

  turn_off_manual_control_for_group:
    alias: Turn Off Manual Control for AL Group
    description: Turns off manual control and re-enables a specific Adaptive Lighting switch.
    fields:
      al_switch_entity_id:
        description: The entity ID of the Adaptive Lighting switch (e.g., switch.adaptive_lighting_hue_adapt).
        example: switch.adaptive_lighting_hue_adapt
    sequence:
      - service: adaptive_lighting.set_manual_control
        data:
          entity_id: "{{ al_switch_entity_id }}"
          manual_control: false
      # Turn the main switch and its adapt brightness/color switches back on
      # Assumes naming convention: switch.adaptive_lighting_<group_name>,
      # switch.adaptive_lighting_adapt_brightness_<group_name>, etc.
      - variables:
          group_name: "{{ al_switch_entity_id | replace('switch.adaptive_lighting_', '') }}"
      - service: switch.turn_on
        target:
          entity_id:
            - "{{ al_switch_entity_id }}"
            - "switch.adaptive_lighting_adapt_brightness_{{ group_name }}"
            - "switch.adaptive_lighting_adapt_color_{{ group_name }}"
        data: {}
    mode: single

  # --- Apply AL to Area ---
  apply_adaptive_lighting_to_area:
    alias: Apply Adaptive Lighting to Area
    description: Apply adaptive lighting settings to a specific area (NEEDS TEMPLATE REVIEW)
    fields:
      area_id:
        description: The area to control
        example: living_room
      transition:
        description: Transition time in seconds
        example: 1
    sequence:
      - variables:
          area_lights: '{{ expand(area_entities(area_id, ''light'')) | map(attribute=''entity_id'') | list }}'
      - target:
          entity_id: '{{ area_lights }}'
        data:
          transition: '{{ transition }}'
        action: light.turn_on
      - delay:
          seconds: 1
      # WARNING: This template logic is brittle and uses old entity IDs.
      # It needs updating with standardized names.
      # Consider using labels applied by the main script for a more robust solution.
      - data:
          entity_id: >
            {% set area_obj = area_id | area_id %}
            {% set al_switch = 'switch.adaptive_lighting_' + area_obj.name | lower | replace(' ', '_') %}
            {{ al_switch if states(al_switch) != 'unavailable' else '' }}
          lights: '{{ area_lights }}'
          transition: '{{ transition }}'
        action: adaptive_lighting.apply

  # --- Reset Active Manual Control ---
  reset_active_manual_control:
    alias: Reset Active Adaptive Lighting Manual Control
    description: Checks all main AL switches and resets manual control if active by reapplying AL settings.
    mode: single
    icon: mdi:lightbulb-auto-outline
    sequence:
      - variables:
          al_switches:
            - switch.adaptive_lighting_non_hue
            - switch.adaptive_lighting_kitchen_island
            - switch.adaptive_lighting_master_adapt
            - switch.adaptive_lighting_track_lights
            - switch.adaptive_lighting_hue_adapt
      - repeat:
          for_each: "{{ al_switches }}"
          sequence:
            # Only reset if manual control is actually active for the switch
            - condition: template
              value_template: "{{ state_attr(repeat.item, 'manual_control') | list | length > 0 }}"
            - service: adaptive_lighting.apply
              target:
                entity_id: "{{ repeat.item }}"


  # --- Turn On All Lights with AL Sync ---
  turn_on_all_lights:
    alias: Turn On All Lights
    description: Turns on all lights with synchronized adaptive lighting control
    mode: restart
    sequence:
      # Use standardized entity names
      # Target the groups and remaining individual lights
      - target:
          entity_id:
            - light.al_group_non_hue
            - light.al_group_track_lights
            - light.al_group_hue_adapt
            - light.kitchen_island_pendants
            - light.master_bedroom_table_lamps
        data:
          transition: 1
        action: light.turn_on
      - delay:
          seconds: 1
      # Update light lists in apply actions
      - data:
          entity_id: switch.adaptive_lighting_non_hue
          # Apply to the group
          lights: light.al_group_non_hue
          transition: 1
        action: adaptive_lighting.apply
      - data:
          entity_id: switch.adaptive_lighting_kitchen_island
          lights:
            - light.kitchen_island_pendants
          transition: 1
        action: adaptive_lighting.apply
      - data:
          entity_id: switch.adaptive_lighting_master_adapt
          lights:
            - light.master_bedroom_table_lamps
          transition: 1
        action: adaptive_lighting.apply
      - data:
          entity_id: switch.adaptive_lighting_track_lights
          # Apply to the group
          lights: light.al_group_track_lights
          transition: 1
        action: adaptive_lighting.apply
      - data:
          entity_id: switch.adaptive_lighting_hue_adapt
          # Apply to the group
          lights: light.al_group_hue_adapt
          transition: 3
        action: adaptive_lighting.apply

# Automations to manage input booleans and potentially other AL logic
automation:
  - alias: "AL Update Manual Control Booleans (Consolidated)"
    id: al_update_manual_control_booleans_consolidated
    description: Updates manual control input booleans based on Adaptive Lighting switch states.
    trigger:
      - platform: state
        entity_id:
          - switch.adaptive_lighting_non_hue
          - switch.adaptive_lighting_kitchen_island
          - switch.adaptive_lighting_master_adapt
          - switch.adaptive_lighting_track_lights
          - switch.adaptive_lighting_hue_adapt
        attribute: manual_control
    action:
      - variables:
          al_switch_entity_id: "{{ trigger.entity_id }}"
          manual_control_active: "{{ trigger.to_state.attributes.manual_control | list | length > 0 }}"
          target_boolean_entity_id: "{{ al_switch_entity_id | replace('switch.adaptive_lighting_', 'input_boolean.al_manual_control_') }}"
      - service: "input_boolean.turn_{{ 'on' if manual_control_active else 'off' }}"
        target:
          entity_id: "{{ target_boolean_entity_id }}"
    mode: parallel
    max: 10

# New sensor replacing light_integrity
  - sensor:
      - name: adaptive_lighting_status
        unique_id: adaptive_lighting_status # Added unique_id
        state: >
          {% set manual_groups = namespace(count=0, list=[]) %}
          {% for entity_id in ['input_boolean.al_manual_control_non_hue', 'input_boolean.al_manual_control_kitchen_island', 'input_boolean.al_manual_control_master_adapt', 'input_boolean.al_manual_control_track_lights', 'input_boolean.al_manual_control_hue_adapt'] %}
            {% if is_state(entity_id, 'on') %}
              {% set manual_groups.count = manual_groups.count + 1 %}
              {% set manual_groups.list = manual_groups.list + [entity_id] %}
            {% endif %}
          {% endfor %}
          
          {% if manual_groups.count == 0 %}
            fully_adaptive
          {% elif manual_groups.count >= 4 %}
            mostly_manual
          {% else %}
            partially_manual
          {% endif %}
        attributes:
          manual_count: >
            {% set count = namespace(value=0) %}
            {% for entity_id in ['input_boolean.al_manual_control_non_hue', 'input_boolean.al_manual_control_kitchen_island', 'input_boolean.al_manual_control_master_adapt', 'input_boolean.al_manual_control_track_lights', 'input_boolean.al_manual_control_hue_adapt'] %}
              {% if is_state(entity_id, 'on') %}
                {% set count.value = count.value + 1 %}
              {% endif %}
            {% endfor %}
            {{ count.value }}
          manual_groups: >
            {% set groups = namespace(list=[]) %}
            {% for entity_id in ['input_boolean.al_manual_control_non_hue', 'input_boolean.al_manual_control_kitchen_island', 'input_boolean.al_manual_control_master_adapt', 'input_boolean.al_manual_control_track_lights', 'input_boolean.al_manual_control_hue_adapt'] %}
              {% if is_state(entity_id, 'on') %}
                {% set groups.list = groups.list + [entity_id] %}
              {% endif %}
            {% endfor %}
            {{ groups.list | join(',') }}
          adaptive_lights: >
            {% set al_info = namespace(current_values={}) %}
            {% set al_switches = ['switch.adaptive_lighting_non_hue', 'switch.adaptive_lighting_kitchen_island', 'switch.adaptive_lighting_master_adapt', 'switch.adaptive_lighting_track_lights', 'switch.adaptive_lighting_hue_adapt'] %}
            {% set brightness = 0 %}
            {% set color_temp_kelvin = 0 %}
            {% set sun_position = 0 %}
            {% set switch_count = 0 %}
            {% for al_switch in al_switches %}
              {% if states(al_switch) != 'unavailable' %}
                {% set brightness = brightness + (state_attr(al_switch, 'brightness') | int(0)) %}
                {% set color_temp_kelvin = color_temp_kelvin + (state_attr(al_switch, 'color_temp_kelvin') | int(0)) %}
                {% set sun_position = sun_position + (state_attr(al_switch, 'sun_position') | float(0)) %}
                {% set switch_count = switch_count + 1 %}
              {% endif %}
            {% endfor %}
            {% if switch_count > 0 %}
              {% set al_info.current_values = {'color_temp': (color_temp_kelvin / switch_count) | int,
                 'brightness': (brightness / switch_count) | int,
                 'sun_position': (sun_position / switch_count) | float} %}
            {% endif %}
            {{ al_info.current_values | to_json }}
input_boolean:
  al_manual_control_non_hue:
    name: AL Manual Control Non-Hue
    icon: mdi:hand-back-right-outline
  al_manual_control_kitchen_island:
    name: AL Manual Control Kitchen Island
    icon: mdi:hand-back-right-outline
  al_manual_control_master_adapt:
    name: AL Manual Control Master Adapt
    icon: mdi:hand-back-right-outline
  al_manual_control_track_lights:
    name: AL Manual Control Track Lights
    icon: mdi:hand-back-right-outline
  al_manual_control_hue_adapt:
    name: AL Manual Control Hue Adapt
    icon: mdi:hand-back-right-outline
