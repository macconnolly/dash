# ======================================================
# CONTEXT HELPER SENSORS PACKAGE
# ======================================================
# This package provides a comprehensive set of context-aware sensors
# to power the adaptive dashboard experience.
#
# Author: Mac Connolly
# Version: 3.0
# Last Updated: April 18, 2025
# ======================================================

template:
  # ======================================================
  # TIME CONTEXT SENSORS
  # ======================================================
  - sensor:
      - name: "Time Context"
        unique_id: time_context
        icon: >
          {% if now().hour < 6 %}
            mdi:weather-night
          {% elif now().hour < 12 %}
            mdi:weather-sunny
          {% elif now().hour < 17 %}
            mdi:weather-partly-cloudy
          {% elif now().hour < 22 %}
            mdi:weather-sunset
          {% else %}
            mdi:weather-night
          {% endif %}
        state: >
          {% if now().hour < 6 %}
            Night
          {% elif now().hour < 9 %}
            Morning
          {% elif now().hour < 12 %}
            Late Morning
          {% elif now().hour < 17 %}
            Afternoon
          {% elif now().hour < 22 %}
            Evening
          {% else %}
            Night
          {% endif %}
      
      - name: "Day Period"
        unique_id: day_period
        icon: mdi:calendar-clock
        state: >
          {% if now().hour < 6 %}
            overnight
          {% elif now().hour < 12 %}
            morning
          {% elif now().hour < 17 %}
            afternoon
          {% elif now().hour < 22 %}
            evening
          {% else %}
            overnight
          {% endif %}
      
      - name: "Is Daytime"
        unique_id: is_daytime
        icon: mdi:weather-sunny
        state: >
          {% if now().hour >= 7 and now().hour < 19 %}
            true
          {% else %}
            false
          {% endif %}
      
      - name: "Is Weekend"
        unique_id: is_weekend
        icon: mdi:calendar-weekend
        state: >
          {% if now().weekday() >= 5 %}
            true
          {% else %}
            false
          {% endif %}
      
      - name: "Day of Week"
        unique_id: day_of_week
        icon: mdi:calendar-blank
        state: >
          {{ now().strftime("%A") }}

  # ======================================================
  # ADAPTIVE LIGHTING CONTEXT SENSORS
  # ======================================================
  - sensor:
      - name: "AL Lights State Summary"
        unique_id: al_lights_state_summary
        icon: mdi:lightbulb-group-outline
        state: >
          {% set lights_count = expand('light.al_group_hue_adapt','light.al_group_non_hue','light.al_group_track_lights') | selectattr('state', 'eq', 'on') | list | count %}
          {% set manual_lights = states.input_boolean | selectattr('entity_id', 'search', 'al_manual_control') | selectattr('state', 'eq', 'on') | list | count %}
          {% if lights_count == 0 %}
            All Off
          {% elif manual_lights > 0 %}
            {{ manual_lights }} Manual
          {% else %}
            {{ lights_count }} Adaptive
          {% endif %}
      
      - name: "AL Lights Active Count"
        unique_id: al_lights_active_count
        icon: mdi:lightbulb-multiple-outline
        unit_of_measurement: "lights"
        state: >
          {{ expand('light.al_group_hue_adapt','light.al_group_non_hue','light.al_group_track_lights') | selectattr('state', 'eq', 'on') | list | count }}
      
      - name: "AL Manual Control Count"
        unique_id: al_manual_control_count
        icon: mdi:hand-back-right
        unit_of_measurement: "groups"
        state: >
          {{ states.input_boolean | selectattr('entity_id', 'search', 'al_manual_control') | selectattr('state', 'eq', 'on') | list | count }}
      
      - name: "AL Dominant Color Temp"
        unique_id: al_dominant_color_temp
        icon: mdi:thermometer
        unit_of_measurement: "K"
        state: >
          {% set active_lights = expand('light.al_group_hue_adapt') | selectattr('state', 'eq', 'on') | list %}
          {% if active_lights | count > 0 %}
            {% set total_temp = namespace(val=0) %}
            {% set count = namespace(val=0) %}
            {% for light in active_lights %}
              {% if light.attributes.color_temp_kelvin is defined %}
                {% set total_temp.val = total_temp.val + light.attributes.color_temp_kelvin %}
                {% set count.val = count.val + 1 %}
              {% endif %}
            {% endfor %}
            {{ (total_temp.val / count.val) | round(0) if count.val > 0 else 3000 }}
          {% else %}
            {# Fallback to adaptive_lighting_status sensor attribute if no Hue lights active #}
            {{ state_attr('sensor.adaptive_lighting_status', 'adaptive_lights').color_temp | default(3000) | int }}
          {% endif %}

  # ======================================================
  # SONOS & MEDIA CONTEXT SENSORS
  # ======================================================
  - sensor:
      - name: "Sonos Active Count"
        unique_id: sonos_active_count
        icon: mdi:speaker-wireless
        unit_of_measurement: "speakers"
        state: >
          {{ expand('media_player.living_room', 'media_player.kitchen', 'media_player.dining_room', 'media_player.master_bedroom', 'media_player.sun_house') | selectattr('state', 'eq', 'playing') | list | count }}
      
      - name: "Sonos Last Active Player"
        unique_id: sonos_last_active_player
        icon: mdi:speaker-wireless
        state: >
          {% set active_players = expand('media_player.living_room', 'media_player.kitchen', 'media_player.dining_room', 'media_player.master_bedroom', 'media_player.sun_house') | selectattr('state', 'eq', 'playing') | list %}
          {% if active_players | count > 0 %}
            {{ active_players[0].entity_id }}
          {% else %}
            {{ states('input_text.sonos_active_group_master') }}
          {% endif %}
      
      - name: "Now Playing Summary"
        unique_id: now_playing_summary
        icon: mdi:music-note
        state: >
          {% set active_players = expand('media_player.living_room', 'media_player.kitchen', 'media_player.dining_room', 'media_player.master_bedroom', 'media_player.sun_house') | selectattr('state', 'eq', 'playing') | list %}
          {% if active_players | count > 0 %}
            {% set first_player = active_players[0] %}
            {% if first_player.attributes.media_artist is defined and first_player.attributes.media_title is defined %}
              {{ first_player.attributes.media_artist }} - {{ first_player.attributes.media_title }}
            {% elif first_player.attributes.media_title is defined %}
              {{ first_player.attributes.media_title }}
            {% else %}
              Playing
            {% endif %}
          {% else %}
            Nothing playing
          {% endif %}
      
      - name: "Media Active Rooms"
        unique_id: media_active_rooms
        icon: mdi:speaker-multiple
        state: >
          {% set active_players = expand('media_player.living_room', 'media_player.kitchen', 'media_player.dining_room', 'media_player.master_bedroom', 'media_player.sun_house') | selectattr('state', 'eq', 'playing') | list %}
          {% if active_players | count > 0 %}
            {% set rooms = [] %}
            {% for player in active_players %}
              {% set room = player.entity_id.split('.')[1] | replace('_', ' ') | title %}
              {% set rooms = rooms + [room] %}
            {% endfor %}
            {{ rooms | join(', ') }}
          {% else %}
            None
          {% endif %}

  # ======================================================
  # OCCUPANCY & PRESENCE CONTEXT SENSORS
  # ======================================================
  - sensor:
      - name: "Active Zones Count"
        unique_id: active_zones_count
        icon: mdi:home-group
        unit_of_measurement: "zones"
        state: >
          {{ [
            states('input_boolean.living_room_occupied'),
            states('input_boolean.kitchen_occupied'),
            states('input_boolean.dining_room_occupied')
          ] | select('eq', 'on') | list | count }}
      
      - name: "Primary Active Zone"
        unique_id: primary_active_zone
        icon: mdi:home-floor-1
        state: >
          {% if is_state('input_boolean.living_room_occupied', 'on') %}
            Living Room
          {% elif is_state('input_boolean.kitchen_occupied', 'on') %}
            Kitchen
          {% elif is_state('input_boolean.dining_room_occupied', 'on') %}
            Dining Room
          {% else %}
            None
          {% endif %}
      
      - name: "Active Areas"
        unique_id: active_areas
        icon: mdi:floor-plan
        state: >
          {% set areas = [] %}
          {% if is_state('input_boolean.living_room_occupied', 'on') %}
            {% set areas = areas + ['Living Room'] %}
          {% endif %}
          {% if is_state('input_boolean.kitchen_occupied', 'on') %}
            {% set areas = areas + ['Kitchen'] %}
          {% endif %}
          {% if is_state('input_boolean.dining_room_occupied', 'on') %}
            {% set areas = areas + ['Dining Room'] %}
          {% endif %}
          {{ areas | join(', ') if areas | count > 0 else 'None' }}
      
      - name: "Home Occupancy Duration"
        unique_id: home_occupancy_duration
        icon: mdi:home-clock-outline
        unit_of_measurement: "min"
        state: >
          {% if is_state('input_boolean.home_occupied', 'on') %}
            {% set last_changed = states.input_boolean.home_occupied.last_changed %}
            {% set duration_minutes = ((now() - last_changed).total_seconds() / 60) | round(0) %}
            {{ duration_minutes }}
          {% else %}
            0
          {% endif %}

  # ======================================================
  # CLIMATE & COMFORT CONTEXT SENSORS
  # ======================================================
  - sensor:
      - name: "Temperature Zone Status"
        unique_id: temperature_zone_status
        icon: mdi:thermometer
        state: >
          {% set dining = states('sensor.dining_room_temperature') | float(0) %}
          {% set living = states('sensor.living_room_temperature') | float(0) %}
          {% set kitchen = states('sensor.kitchen_temperature') | float(0) %}
          {% set bedroom = states('sensor.master_bedroom_temperature') | float(0) %}
          {% set avg = ((dining + living + kitchen) / 3) | round(1) %}
          {% set diff = ((max(dining, living, kitchen) - min(dining, living, kitchen)) | round(1)) %}
          {% if diff > 3 %}
            Uneven ({{ diff }}° variance)
          {% elif avg > states('climate.dining_room', 'temperature') | float(72) + 2 %}
            Warm ({{ avg }}°)
          {% elif avg < states('climate.dining_room', 'temperature') | float(72) - 2 %}
            Cool ({{ avg }}°)
          {% else %}
            Balanced ({{ avg }}°)
          {% endif %}
      
      - name: "HVAC Mode Context"
        unique_id: hvac_mode_context
        icon: >
          {% if is_state_attr('climate.dining_room', 'hvac_action', 'heating') %}
            mdi:fire
          {% elif is_state_attr('climate.dining_room', 'hvac_action', 'cooling') %}
            mdi:snowflake
          {% elif is_state_attr('climate.dining_room', 'hvac_action', 'idle') %}
            mdi:thermostat
          {% else %}
            mdi:hvac-off
          {% endif %}
        state: >
          {% if is_state_attr('climate.dining_room', 'hvac_action', 'heating') %}
            Heating
          {% elif is_state_attr('climate.dining_room', 'hvac_action', 'cooling') %}
            Cooling
          {% elif is_state_attr('climate.dining_room', 'hvac_action', 'idle') %}
            Idle
          {% else %}
            Off
          {% endif %}
      
      - name: "Temperature Trend"
        unique_id: temperature_trend
        icon: >
          {% set current = states('sensor.dining_room_temperature') | float(0) %}
          {% set target = state_attr('climate.dining_room', 'temperature') | float(72) %}
          {% if current > target + 1 %}
            mdi:thermometer-plus
          {% elif current < target - 1 %}
            mdi:thermometer-minus
          {% else %}
            mdi:thermometer
          {% endif %}
        state: >
          {% set current = states('sensor.dining_room_temperature') | float(0) %}
          {% set target = state_attr('climate.dining_room', 'temperature') | float(72) %}
          {% if current > target + 2 %}
            Above Target (+{{ (current - target) | round(1) }}°)
          {% elif current < target - 2 %}
            Below Target (-{{ (target - current) | round(1) }}°)
          {% else %}
            At Target (±{{ (current - target) | abs | round(1) }}°)
          {% endif %}

  # ======================================================
  # PRIMARY CONTEXT SENSOR - DASHBOARD STATE
  # ======================================================
  - sensor:
      - name: "Dashboard Context"
        unique_id: dashboard_context
        icon: >
          {% if is_state('input_boolean.good_night_active', 'on') %}
            mdi:sleep
          {% elif is_state('input_boolean.home_occupied', 'off') %}
            mdi:home-export-outline
          {% elif is_state('input_boolean.movie_mode_active', 'on') %}
            mdi:movie-open
          {% elif is_state('input_boolean.guest_mode_active', 'on') %}
            mdi:account-group
          {% elif is_state('binary_sensor.iphone_12_pro_focus', 'on') and states('sensor.iphone_12_pro_focus_mode') == 'Work' %}
            mdi:briefcase
          {% elif now().hour >= 6 and now().hour < 10 %}
            mdi:weather-sunny
          {% elif now().hour >= 17 and now().hour < 22 %}
            mdi:weather-sunset
          {% else %}
            mdi:home
          {% endif %}
        state: >
          {% if is_state('input_boolean.good_night_active', 'on') %}
            Sleep Mode
          {% elif is_state('input_boolean.home_occupied', 'off') %}
            Away Mode
          {% elif is_state('input_boolean.movie_mode_active', 'on') %}
            Movie Mode
          {% elif is_state('input_boolean.guest_mode_active', 'on') %}
            Guest Mode
          {% elif is_state('binary_sensor.iphone_12_pro_focus', 'on') and states('sensor.iphone_12_pro_focus_mode') == 'Work' %}
            Focus Mode
          {% elif now().hour >= 6 and now().hour < 10 %}
            Morning Mode
          {% elif now().hour >= 17 and now().hour < 22 %}
            Evening Mode
          {% else %}
            Day Mode
          {% endif %}

  # ======================================================
  # ACTIVITY CONTEXT SENSORS
  # ======================================================
  - sensor:
      - name: "Living Room Activity"
        unique_id: living_room_activity
        icon: >
          {% if is_state('media_player.living_room', 'playing') %}
            mdi:television-play
          {% elif is_state('input_boolean.living_room_occupied', 'on') %}
            mdi:sofa
          {% else %}
            mdi:sofa-outline
          {% endif %}
        state: >
          {% if is_state('media_player.living_room', 'playing') %}
            {% if 'TV' in state_attr('media_player.living_room', 'friendly_name') | default('') %}
              Watching TV
            {% else %}
              Listening to Music
            {% endif %}
          {% elif is_state('input_boolean.living_room_occupied', 'on') %}
            Occupied
          {% else %}
            Vacant
          {% endif %}
      
      - name: "Kitchen Activity"
        unique_id: kitchen_activity
        icon: >
          {% if is_state('input_boolean.kitchen_occupied', 'on') %}
            mdi:countertop
          {% else %}
            mdi:countertop-outline
          {% endif %}
        state: >
          {% if is_state('input_boolean.kitchen_occupied', 'on') %}
            {% if now().hour >= 6 and now().hour < 10 %}
              Breakfast Time
            {% elif now().hour >= 11 and now().hour < 14 %}
              Lunch Time
            {% elif now().hour >= 17 and now().hour < 20 %}
              Dinner Time
            {% else %}
              Occupied
            {% endif %}
          {% else %}
            Vacant
          {% endif %}
      
      - name: "Dining Room Activity"
        unique_id: dining_room_activity
        icon: >
          {% if is_state('input_boolean.dining_room_occupied', 'on') %}
            mdi:table-chair
          {% else %}
            mdi:table-chair
          {% endif %}
        state: >
          {% if is_state('input_boolean.dining_room_occupied', 'on') %}
            {% if now().hour >= 6 and now().hour < 10 %}
              Breakfast
            {% elif now().hour >= 11 and now().hour < 14 %}
              Lunch
            {% elif now().hour >= 17 and now().hour < 20 %}
              Dinner
            {% else %}
              Occupied
            {% endif %}
          {% else %}
            Vacant
          {% endif %}

# ======================================================
# CONTEXTUAL BINARY SENSORS
# ======================================================
binary_sensor:
  - platform: template
    sensors:
      context_guest_mode:
        friendly_name: "Guest Mode Active"
        icon_template: mdi:account-group
        value_template: "{{ is_state('input_boolean.guest_mode_active', 'on') }}"
      
      context_movie_mode:
        friendly_name: "Movie Mode Active"
        icon_template: mdi:movie-open
        value_template: "{{ is_state('input_boolean.movie_mode_active', 'on') }}"
      
      context_sleep_mode:
        friendly_name: "Sleep Mode Active"
        icon_template: mdi:sleep
        device_class: occupancy
        value_template: "{{ is_state('input_boolean.good_night_active', 'on') }}"
      
      context_away_mode:
        friendly_name: "Away Mode Active"
        icon_template: mdi:home-export-outline
        value_template: "{{ is_state('input_boolean.home_occupied', 'off') }}"
      
      context_focus_mode:
        friendly_name: "Focus Mode Active"
        icon_template: mdi:account-lock
        value_template: "{{ is_state('binary_sensor.iphone_12_pro_focus', 'on') }}"
      
      context_music_playing:
        friendly_name: "Music Playing"
        icon_template: mdi:music
        value_template: >
          {{ expand('media_player.living_room', 'media_player.kitchen', 'media_player.dining_room', 'media_player.master_bedroom', 'media_player.sun_house') | selectattr('state', 'eq', 'playing') | list | count > 0 }}
      
      context_adaptive_lighting_active:
        friendly_name: "Adaptive Lighting Active"
        icon_template: mdi:theme-light-dark
        value_template: >
          {{ states.switch | selectattr('entity_id', 'search', 'adaptive_lighting') | selectattr('state', 'eq', 'on') | list | count > 0 }}
      
      context_manual_lighting_active:
        friendly_name: "Manual Lighting Active"
        icon_template: mdi:lightbulb-variant
        value_template: >
          {{ states.input_boolean | selectattr('entity_id', 'search', 'al_manual_control') | selectattr('state', 'eq', 'on') | list | count > 0 }}
      
      context_hvac_active:
        friendly_name: "HVAC Active"
        icon_template: >
          {% if is_state_attr('climate.dining_room', 'hvac_action', 'heating') %}
            mdi:fire
          {% elif is_state_attr('climate.dining_room', 'hvac_action', 'cooling') %}
            mdi:snowflake
          {% else %}
            mdi:hvac
          {% endif %}
        value_template: >
          {{ is_state_attr('climate.dining_room', 'hvac_action', 'heating') or is_state_attr('climate.dining_room', 'hvac_action', 'cooling') }}