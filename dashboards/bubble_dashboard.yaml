title: "Adaptive Living"
views:
  # Primary Home View with Context Awareness
  - title: Home
    path: home
    icon: mdi:home
    subview: false
    badges: []
    cards:
      # Context-Aware Header
      - type: custom:bubble-card
        card_type: template
        template: www/streamline/templates/dynamic_context_header.yaml
        variables:
          title: >
            {% if is_state('sensor.current_dashboard_context', 'Morning Routine') %}
              Good Morning
            {% elif is_state('sensor.current_dashboard_context', 'Evening Relax') %}
              Good Evening
            {% elif is_state('sensor.current_dashboard_context', 'Good Night') %}
              Good Night
            {% elif is_state('sensor.current_dashboard_context', 'Away') %}
              Away Mode
            {% elif is_state('sensor.current_dashboard_context', 'Hosting Guests') %}
              Hosting Mode
            {% elif is_state('sensor.current_dashboard_context', 'Movie Night') %}
              Movie Night
            {% elif is_state('sensor.current_dashboard_context', 'Work Focus') %}
              Focus Mode
            {% else %}
              Welcome Home
            {% endif %}
          subtitle: "{{ now().strftime('%A, %B %d') }} • {{ states('sensor.current_dashboard_context') }}"
          icon: >
            {% if is_state('sensor.current_dashboard_context', 'Morning Routine') %}
              mdi:weather-sunny
            {% elif is_state('sensor.current_dashboard_context', 'Evening Relax') %}
              mdi:weather-night
            {% elif is_state('sensor.current_dashboard_context', 'Good Night') %}
              mdi:sleep
            {% elif is_state('sensor.current_dashboard_context', 'Away') %}
              mdi:home-export-outline
            {% elif is_state('sensor.current_dashboard_context', 'Hosting Guests') %}
              mdi:account-group
            {% elif is_state('sensor.current_dashboard_context', 'Movie Night') %}
              mdi:movie-open
            {% elif is_state('sensor.current_dashboard_context', 'Work Focus') %}
              mdi:laptop
            {% else %}
              mdi:home
            {% endif %}
          context_entity: sensor.current_dashboard_context
          temperature_entity: weather.home_2 # Using weather.home_2 temperature
          time_entity: sensor.time # Still referenced, will address later
          date_entity: sensor.date_long # Still referenced, will address later
          show_weather: true
          show_quick_actions: true
          avatar_url: ""
          animation_enabled: true
          style_variant: "bubble"
          use_design_system: true
      
      # Quick Scene Controls
      - type: custom:bubble-horizontal-buttons-stack
        buttons:
          - name: "All On"
            icon: mdi:lightbulb-group
            styles: |
              .bubble-icon-container {
                background-color: rgba(250, 210, 140, 0.2);
              }
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.general_bright_v1
          
          - name: "Evening"
            icon: mdi:weather-sunset
            styles: |
              .bubble-icon-container {
                background-color: rgba(255, 180, 100, 0.2);
              }
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.relax_evening_v1
          
          - name: "Accent"
            icon: mdi:lamps
            styles: |
              .bubble-icon-container {
                background-color: rgba(180, 140, 255, 0.2);
              }
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.accent_only_v1
          
          - name: "All Off"
            icon: mdi:power-sleep
            styles: |
              .bubble-icon-container {
                background-color: rgba(200, 200, 200, 0.2);
              }
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.all_common_off_v1
      
      # Open floor plan card - unified control for connected spaces
      - type: custom:streamline-card
        template: open_floor_plan_card
        variables:
          style: bubble
          title: "Open Living Space"
          rooms: 
            - living_room
            - kitchen
            - dining_room
          room_names:
            - Living Room
            - Kitchen
            - Dining Room
          presence_entities:
            - binary_sensor.living_room_presence
            - binary_sensor.kitchen_presence
            - binary_sensor.dining_room_presence
          light_entities:
            - light.living_room # Adjust if needed
            - light.al_group_non_hue # Using group for kitchen
            - light.al_group_track_lights # Using group for dining room
          temperature_entities:
            - sensor.dining_room_temperature # Using dining as proxy
            - sensor.dining_room_temperature # Using dining as proxy
            - sensor.dining_room_temperature
          media_entities:
            - media_player.living_room
            - media_player.kitchen
          # Removed scene variables as most scenes were missing
          # scene_entities:
          #   - scene.open_area_bright
          #   - scene.open_area_warm
          #   - scene.open_area_cozy
          #   - scene.open_area_movie
          # scene_names:
          #   - Bright
          #   - Warm
          #   - Cozy
          #   - Movie
          # scene_icons:
          #   - mdi:brightness-7
          #   - mdi:brightness-6
          #   - mdi:lightbulb-outline
          #   - mdi:movie-outline
          climate_entity: climate.dining_room # Using dining climate
          context_entity: sensor.home_context_engine
          adaptive_lighting_switch: switch.adaptive_lighting_track_lights # Using track lights AL switch
      
      # Sonos Multi-Room Control - specially designed for open floor plan
      - type: custom:streamline-card
        template: sonos_group_control
        variables:
          style: bubble
          title: "Open Area Audio"
          main_player: media_player.living_room
          players:
            - media_player.living_room
            - media_player.kitchen
          player_names:
            - Living Room
            - Kitchen
          show_artwork: true
          show_groups: true
          show_presets: false # Set to false as preset scripts are missing
          # preset_scripts:
          #   - script.sonos_preset_all_rooms
          #   - script.sonos_preset_kitchen_dining
          #   - script.sonos_preset_living_only
          # preset_names:
          #   - All Rooms
          #   - Kitchen & Dining
          #   - Living Room
          # preset_icons:
          #   - mdi:speaker-multiple
          #   - mdi:silverware-fork-knife
          #   - mdi:sofa
      
      # Context-Based Information Card (Weather/Calendar for Morning, etc.)
      - type: conditional
        conditions:
          - condition: state
            entity: sensor.current_dashboard_context
            state: Morning Routine
        card:
          type: custom:bubble-card
          card_type: pop-up
          hash: '#morning-weather'
          icon: mdi:weather-partly-cloudy
          name: "Today's Weather"
          state_display: "{{ states('weather.home_2') }}"
          styles: |
            .bubble-button-background {
              background: linear-gradient(135deg, rgba(150,200,255,0.3) 0%, rgba(150,200,255,0.05) 100%) !important;
              opacity: 1 !important;
            }
      
      # Grid of other rooms that are separate from the open floor plan
      - type: custom:bubble-grid
        columns: 2
        square: false
        cards:
          # Bedroom Card (Using Bubble Card Area Module)
          - type: custom:bubble-card
            card_type: template
            template: www/bubble/modules/area-card.yaml
            variables:
              title: "Bedroom"
              icon: mdi:bed
              area_color: "rgba(180, 120, 220, 1)" # Soft Purple
              light_group: light.master_bedroom_table_lamps # Using existing light entity
              # Removed occupancy_sensor as it doesn't exist
              # Removed temperature_sensor as it doesn't exist
              # Removed media_player as it doesn't exist
              al_manual_control: input_boolean.al_manual_control_master_adapt
              al_switch: switch.adaptive_lighting_master_adapt
              popup_hash: '#bedroom-popup' # Ensure this popup is defined

          # Bathroom Card (Removed as requested)
      
      # Climate & Weather Row
      - type: horizontal-stack
        cards:
          # Climate Overview Card
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#climate-control'
            icon: mdi:thermostat
            name: "Climate"
            entity: climate.dining_room
            state_display: >
              {{ state_attr('climate.dining_room', 'current_temperature') }}° → 
              {{ state_attr('climate.dining_room', 'temperature') }}°
            styles: |
              .bubble-button-background {
                background: ${
                  (() => {
                    const hvacAction = hass.states['climate.dining_room']?.attributes?.hvac_action;
                    if (hvacAction === 'heating') return 'linear-gradient(135deg, rgba(255,150,64,0.3) 0%, rgba(255,150,64,0.05) 100%)';
                    if (hvacAction === 'cooling') return 'linear-gradient(135deg, rgba(64,150,255,0.3) 0%, rgba(64,150,255,0.05) 100%)';
                    if (hvacAction === 'idle') return 'linear-gradient(135deg, rgba(180,180,180,0.2) 0%, rgba(180,180,180,0.05) 100%)';
                    return 'none';
                  })()
                } !important;
                opacity: 1 !important;
              }
              
              .bubble-icon {
                color: ${
                  (() => {
                    const hvacAction = hass.states['climate.dining_room']?.attributes?.hvac_action;
                    if (hvacAction === 'heating') return 'rgba(255,150,64,1)';
                    if (hvacAction === 'cooling') return 'rgba(64,150,255,1)';
                    if (hvacAction === 'idle') return 'rgba(180,180,180,1)';
                    return 'var(--primary-text-color)';
                  })()
                } !important;
              }
          
          # Weather Card
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#morning-weather' # Reusing morning weather popup for simplicity
            icon: mdi:weather-partly-cloudy
            name: "Weather"
            state_display: "{{ states('weather.home_2') }}"
            styles: |
              .bubble-button-background {
                background: linear-gradient(135deg, rgba(150,200,255,0.3) 0%, rgba(150,200,255,0.05) 100%) !important;
                opacity: 1 !important;
              }
      
      # Adaptive System Status
      - type: custom:bubble-card
        card_type: pop-up
        hash: '#system-monitor-popup'
        icon: >
          {% if is_state('binary_sensor.updater', 'on') %}
            mdi:update
          {% else %}
            mdi:home-assistant
          {% endif %}
        name: "System Status"
        state_display: >
          {% set lights = states.light | selectattr('state', 'eq', 'on') | list | count %}
          {% set media = states.media_player | selectattr('state', 'eq', 'playing') | list | count %}
          {{ lights }} lights • {{ media }} media
        styles: |
          .bubble-button-background {
            background: linear-gradient(135deg, rgba(var(--rgb-primary-color),0.1) 0%, rgba(var(--rgb-primary-color),0.03) 100%) !important;
            opacity: 1 !important;
          }

# Main Bubble Card Dashboard - bubble_dashboard.yaml
# Uses state-switch to adapt the view based on context

type: custom:state-switch
entity: sensor.current_dashboard_context # Using the sensor from system_monitor_control_package.yaml
default: Default Daytime # Default state as per sensor logic
states:
  Morning Routine:
    type: vertical-stack
    cards:
      # Contextual Header (Adapted from Guide Lines 648-766)
      - type: custom:bubble-card
        card_type: header
        name: "{{ states('sensor.time') }}" # Assumes sensor.time exists
        subtitle: "{{ states('sensor.date_long') }}" # Assumes sensor.date_long exists
        icon: >
          {{ 'mdi:weather-night' if is_state('input_boolean.good_night_active', 'on') else
             (state_attr('weather.home_2', 'temperature') | int(0) > 80 ? 'mdi:weather-sunny-alert' :
             (state_attr('weather.home_2', 'temperature') | int(0) < 40 ? 'mdi:snowflake-alert' :
             state_attr('weather.home_2', 'icon') | replace('weather-', 'mdi:weather-'))) }}
        icon_color: >
          {{ 'var(--bubble-info-color)' if is_state('input_boolean.good_night_active', 'on') else
             (state_attr('weather.home_2', 'temperature') | int(0) > 80 ? 'var(--bubble-warning-color)' :
             (state_attr('weather.home_2', 'temperature') | int(0) < 40 ? 'var(--bubble-error-color)' : 'inherit')) }}
        state_display: "{{ state_attr('weather.home_2', 'temperature') }}°F" # Assuming weather.home_2 exists
        state_display_color: >
          {{ state_attr('weather.home_2', 'temperature') | int(0) > 80 ? 'var(--bubble-warning-color)' :
             (state_attr('weather.home_2', 'temperature') | int(0) < 40 ? 'var(--bubble-error-color)' : 'inherit') }}
        button_type: pop-up # Main button opens weather pop-up
        hash: '#morning-weather' # Link to the weather pop-up

        # Sub-buttons for quick access
        sub_buttons:
          - icon: mdi:theme-light-dark
            tooltip: "Adaptive Lighting"
            tap_action:
              action: navigate # Changed to navigate for pop-up
              navigation_path: '#adaptive-lighting-popup'
            active: "{{ is_state('switch.adaptive_lighting_track_lights', 'on') }}" # Using track lights AL switch
            active_color: "var(--bubble-primary-color)"

          - icon: mdi:thermostat
            tooltip: "Thermostat"
            tap_action:
              action: navigate # Changed to navigate for pop-up
              navigation_path: '#thermostat-control'
            active: "{{ states('climate.dining_room') != 'off' }}" # Climate entity from thermostat pop-up
            active_color: >
              {{ 'var(--bubble-error-color)' if is_state('climate.dining_room', 'heat') else
                 ('var(--bubble-info-color)' if is_state('climate.dining_room', 'cool') else 'inherit') }}

          - icon: mdi:cog # Changed icon
            tooltip: "System Monitor"
            tap_action:
              action: navigate # Changed to navigate for pop-up
              navigation_path: '#system-monitor-popup'

          - icon: mdi:power-sleep
            tooltip: "Toggle Good Night"
            tap_action:
              action: call-service
              service: input_boolean.toggle
              service_data:
                entity_id: input_boolean.good_night_active # Using boolean from system monitor package
            active: "{{ is_state('input_boolean.good_night_active', 'on') }}"
            active_color: "var(--bubble-info-color)" # Use info color when active

      # Weather & Calendar Information (Removed Calendar as requested)
      - type: custom:bubble-card
        card_type: pop-up
        hash: '#morning-weather'
        icon: "{{ state_attr('weather.home_2', 'forecast')[0].condition }}" # Assuming weather.home_2 exists
        name: "Today's Weather"
        state_display: "{{ state_attr('weather.home_2', 'temperature') }}° - {{ state_attr('weather.home_2', 'forecast')[0].condition }}"
        styles: |
          .bubble-button-background {
            background: linear-gradient(135deg, rgba(${
                state_attr('weather.home_2', 'temperature') > 75 ? '255,150,50,0.3' :
                (state_attr('weather.home_2', 'temperature') < 45 ? '50,150,255,0.3' : '150,200,255,0.3')
              }) 0%,
              rgba(${
                state_attr('weather.home_2', 'temperature') > 75 ? '255,150,50,0.05' :
                (state_attr('weather.home_2', 'temperature') < 45 ? '50,150,255,0.05' : '150,200,255,0.05')
              }) 100%);
            opacity: 1 !important;
          }

      # Quick Morning Actions (Using Mushroom Chips)
      - type: custom:mushroom-chips-card
        alignment: center
        chips:
          - type: action
            icon: mdi:lightbulb-group
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.morning_lights_v1 # Using existing scene
          # Removed Breakfast and News buttons as scripts are missing
          - type: action
            icon: mdi:weather-sunset-up
            tap_action:
              action: call-service
              service: input_boolean.turn_off
              service_data:
                entity_id: input_boolean.good_night_active # Using boolean from system_monitor_control_package.yaml
            chip_mod:
              style: |
                ha-state-icon {
                  color: {{ 'var(--bubble-info-color)' if is_state('input_boolean.good_night_active', 'on') else 'var(--disabled-text-color)' }};
                }

      # Home Status Summary
      - type: custom:bubble-header
        title: "Home Status"

      - type: custom:bubble-grid
        columns: 2
        cards:
          # Essential Room Cards
          - type: custom:bubble-card
            card_type: pop-up
            hash: '#kitchen-popup'
            icon: mdi:countertop
            name: "Kitchen"
            state_display: "{{ states('sensor.kitchen_temperature') }}°" # Assuming sensor.kitchen_temperature exists
            styles: |
              .bubble-icon-container {
                background-color: rgba(100, 200, 150, 0.2);
              }
          # Removed Bathroom card as requested

  Default Daytime: # Placeholder for the default view
    type: vertical-stack
    cards:
      # Contextual Header (Already added)
      - type: custom:bubble-card
        card_type: header
        name: "{{ states('sensor.time') }}" # Assumes sensor.time exists
        subtitle: "{{ states('sensor.date_long') }}" # Assumes sensor.date_long exists
        icon: >
          {{ 'mdi:weather-night' if is_state('input_boolean.good_night_active', 'on') else
             (state_attr('weather.home_2', 'temperature') | int(0) > 80 ? 'mdi:weather-sunny-alert' :
             (state_attr('weather.home_2', 'temperature') | int(0) < 40 ? 'mdi:snowflake-alert' :
             state_attr('weather.home_2', 'icon') | replace('weather-', 'mdi:weather-'))) }}
        icon_color: >
          {{ 'var(--bubble-info-color)' if is_state('input_boolean.good_night_active', 'on') else
             (state_attr('weather.home_2', 'temperature') | int(0) > 80 ? 'var(--bubble-warning-color)' :
             (state_attr('weather.home_2', 'temperature') | int(0) < 40 ? 'var(--bubble-error-color)' : 'inherit')) }}
        button_type: pop-up # Main button opens weather pop-up
        hash: '#morning-weather' # Link to the weather pop-up

        # Sub-buttons for quick access
        sub_buttons:
          - icon: mdi:theme-light-dark
            tooltip: "Adaptive Lighting"
            tap_action:
              action: navigate # Changed to navigate for pop-up
              navigation_path: '#adaptive-lighting-popup'
            active: "{{ states('switch.adaptive_lighting_track_lights') == 'on' }}" # Using track lights AL switch
            active_color: "var(--bubble-primary-color)"

          - icon: mdi:thermostat
            tooltip: "Thermostat"
            tap_action:
              action: navigate # Changed to navigate for pop-up
              navigation_path: '#thermostat-control'
            active: "{{ states('climate.dining_room') != 'off' }}" # Climate entity from thermostat pop-up
            active_color: >
              {{ 'var(--bubble-error-color)' if is_state('climate.dining_room', 'heat') else
                 ('var(--bubble-info-color)' if is_state('climate.dining_room', 'cool') else 'inherit') }}

          - icon: mdi:cog # Changed icon
            tooltip: "System Monitor"
            tap_action:
              action: navigate # Changed to navigate for pop-up
              navigation_path: '#system-monitor-popup'

          - icon: mdi:power-sleep
            tooltip: "Toggle Good Night"
            tap_action:
              action: call-service
              service: input_boolean.toggle
              service_data:
                entity_id: input_boolean.good_night_active # Boolean from system monitor package
            active: "{{ is_state('input_boolean.good_night_active', 'on') }}"
            active_color: "var(--bubble-info-color)" # Use info color when active

      # Room Summaries Grid (Using Bubble Area Cards)
      - type: custom:bubble-grid
        columns: 2
        cards:
          # Living Room Summary (Using Bubble Card Area Module)
          - type: custom:bubble-card
            card_type: template
            template: www/bubble/modules/area-card.yaml
            variables:
              title: "Living Room"
              icon: mdi:sofa-outline
              area_color: "rgba(120, 180, 220, 1)" # Cool Blue
              light_group: light.living_room # Adjust if needed
              occupancy_sensor: binary_sensor.living_room_presence
              temperature_sensor: sensor.dining_room_temperature # Using dining as proxy
              media_player: media_player.living_room
              al_manual_control: input_boolean.al_manual_control_track_lights # Assuming track lights cover LR
              al_switch: switch.adaptive_lighting_track_lights
              popup_hash: '#living-room-popup'

          # Dining Room Summary (Using Bubble Card Area Module)
          - type: custom:bubble-card
            card_type: template
            template: www/bubble/modules/area-card.yaml
            variables:
              title: "Dining Room"
              icon: mdi:silverware-fork-knife
              area_color: "rgba(220, 180, 120, 1)" # Warm Orange
              light_group: light.al_group_track_lights # Using group for dining room
              occupancy_sensor: binary_sensor.dining_room_presence
              temperature_sensor: sensor.dining_room_temperature
              # Removed media_player as it doesn't exist
              al_manual_control: input_boolean.al_manual_control_track_lights # Assuming track lights cover Dining
              al_switch: switch.adaptive_lighting_track_lights
              popup_hash: '#dining-room-popup'

          # Bedroom Summary (Already updated)
          - type: custom:bubble-card
            card_type: template
            template: www/bubble/modules/area-card.yaml
            variables:
              title: "Bedroom"
              icon: mdi:bed-outline
              area_color: "rgba(180, 120, 220, 1)" # Soft Purple
              light_group: light.master_bedroom_table_lamps # Using existing light entity
              # Removed occupancy_sensor as it doesn't exist
              # Removed temperature_sensor as it doesn't exist
              # Removed media_player as it doesn't exist
              al_manual_control: input_boolean.al_manual_control_master_adapt
              al_switch: switch.adaptive_lighting_master_adapt
              popup_hash: '#bedroom-popup'

          # Kitchen Summary (Using Bubble Card Area Module)
          - type: custom:bubble-card
            card_type: template
            template: www/bubble/modules/area-card.yaml
            variables:
              title: "Kitchen"
              icon: mdi:countertop
              area_color: "rgba(100, 200, 150, 1)" # Teal Green
              light_group: light.al_group_non_hue # Using group for kitchen
              occupancy_sensor: binary_sensor.kitchen_presence
              temperature_sensor: sensor.dining_room_temperature # Using dining as proxy
              media_player: media_player.kitchen
              al_manual_control: input_boolean.al_manual_control_non_hue # Assuming non-hue covers kitchen
              al_switch: switch.adaptive_lighting_non_hue
              popup_hash: '#kitchen-popup'

      # Quick Access Buttons (Using Mushroom Chips)
      - type: custom:mushroom-chips-card
        alignment: center
        chips:
          # Removed All Lights Off button as script is missing
          # Removed Clean House button as script is missing
          - type: action
            icon: mdi:weather-night
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.relax_evening_v1 # Using existing scene
          - type: action
            icon: mdi:brain
            tap_action:
              action: call-service
              service: input_select.select_option
              service_data:
                entity_id: input_select.current_dashboard # Corrected input select name
                option: "Focus Mode"

      # Conditional Media Player (Using mini-media-player)
      - type: conditional
        conditions:
          - entity: sensor.sonos_status
            attribute: active_count
            state_not: "0" # Using active_count attribute
        card:
          type: custom:mini-media-player
          entity: media_player.living_room # Using living room as default
          group: true
          artwork: cover
          name: "Now Playing"
          info: scroll
          hide:
            power: true
            source: true
            # volume: true # Keep volume slider
            controls: false # Keep basic controls
          shortcuts:
            columns: 3
            buttons:
              - icon: mdi:skip-previous
                type: service
                id: media_player.media_previous_track
                data:
                  entity_id: media_player.living_room # Using living room as target
              - icon: mdi:play-pause
                type: service
                id: media_player.media_play_pause
                data:
                  entity_id: media_player.living_room # Using living room as target
              - icon: mdi:skip-next
                type: service
                id: media_player.media_next_track
                data:
                  entity_id: media_player.living_room # Using living room as target

      # Conditional Energy Usage (Removed as requested)
      # - type: conditional
      #   conditions:
      #     - entity: sensor.current_power_usage # Assuming sensor.current_power_usage exists
      #       state_not: "unavailable"
      #   card:
      #     type: custom:bubble-card
      #     card_type: sensor
      #     entity: sensor.current_power_usage
      #     name: "Current Energy Use"
      #     icon: mdi:transmission-tower
      #     styles: |
      #       .bubble-value {
      #         color: ${ hass.states['sensor.current_power_usage'].state | int > 2000 ? 'var(--bubble-warning-color)' : 'inherit' };
      #       }
  Evening Relax:
    type: vertical-stack
    cards:
      # Contextual Header
      - type: custom:bubble-card
        card_type: header
        name: "Evening Relax"
        icon: mdi:weather-night
      # Contextual Chips
      - type: custom:mushroom-chips-card
        alignment: center
        chips:
          - type: action
            icon: mdi:lightbulb-group-off
            tap_action:
              action: call-service
              service: scene.turn_on
              service_data:
                entity_id: scene.all_common_off_v1
          - type: action
            icon: mdi:music
            tap_action:
              action: call-service
              service: script.play_spotify_playlist # Assuming this exists
              service_data:
                entity_id: media_player.living_room # Target speaker
                playlist_uri: spotify:playlist:YOUR_RELAX_PLAYLIST_URI # Replace with actual URI
      # Enhanced Light Card
      - type: custom:bubble-card
        card_type: template
        template: www/bubble/modules/enhanced-light.yaml
        variables:
          entity: light.al_group_hue_adapt
          name: "Accent Lights"
          al_manual_control: input_boolean.al_manual_control_hue_adapt
          reset_al_script: script.reset_al_living_room # Assuming this resets Hue Adapt
          show_color_temp: true
          show_rgb: true
          accent_color: "#9C27B0"
      - !include ../popups/living_room.yaml # Example: Include living room popup content

  Good Night:
    type: vertical-stack
    cards:
      # Contextual Header
      - type: custom:bubble-card
        card_type: header
        name: "Good Night"
        icon: mdi:sleep
      # Contextual Chips
      - type: custom:mushroom-chips-card
        alignment: center
        chips:
          - type: action
            icon: mdi:power-sleep
            tap_action:
              action: call-service
              service: script.initiate_sleep_mode
          - type: action
            icon: mdi:alarm-check
            tap_action:
              action: call-service
              service: script.set_sonos_alarm_from_input
      - !include ../popups/bedroom.yaml # Example: Include bedroom popup content

  Away:
    type: vertical-stack
    cards:
      # Contextual Header
      - type: custom:bubble-card
        card_type: header
        name: "Away Mode"
        icon: mdi:home-export-outline
      # Contextual Chips
      - type: custom:mushroom-chips-card
        alignment: center
        chips:
          - type: entity
            entity: sensor.home_occupancy_duration
            name: "Vacant Since"
          # Removed Arm Security button as entity is unverified/removed
          # - type: action
          #   icon: mdi:shield-lock
          #   tap_action:
